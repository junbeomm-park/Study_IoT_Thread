[쓰레드 구현 방법]
1. Thread클래스를 상속
   1) Thread클래스를 상속
   2) run메소드를 오버라이딩
   	  => 쓰레드 프로그래밍으로 작업하고 싶은 내용 즉, 동시의 실행 흐름으로 표현하고 싶은 내용을 구현
   	                                  -----------------
   	                                  다른 작업의 흐름과 함께 실행하고 싶은내용
   	                                  ex) 네트워크 통신, 동시에 여러 개의 작업 흐름이 실행되도록 하기위해 필요
   3) Thread클래스(Thread의 하위클래스)가 갖고 있는 start()를 호출
      => 동시작업을 시작(멀티쓰래드 프로그램을 ㅅ ㅣ작)
  	  => run을 직접 호출하지 않고 start 메소드를 호출하면 JVM이 실행할 수 있는 상태가 됐을때 자동으로 
  	     Thread객체의 run메소드가 호출
  	     -----------------------
  	     	스케쥴러에 의해서 job이 관리되고 JVM내부에서 판단했을때 적잘한 상황이 되면 쓰레드객체의 run메소드를 호출                               	  
2. 멀티쓰레드 연습
   ThreadTest02.java를 작성하고 테스트하기
   1) A~Z까지 출력되도록 AlphaThread작성하기
   2) 1~100까지 출력되도록 
   	   - 10의 배수가 되면 줄바꿈
   	   - DigitThread
   3) main쓰레드에서 AlphaThread와 DigitThread를 실행 되도록 작성하기
   
3. Runnalbe 인터페이스를 상속
   1) Runnable인터페이스를 구현하는 클래스를 생성
   2) Runnable인터페이스가 갖고 있는 추상메소드인 run메소드를 오버라이딩
      => 동시 작업하고 싶은 내용을 정의
   3) 작성한 Runnable객체를 이용해서 Thread객체를 생성
      => Thread객체를 생성하면서 매개변수로 Runnable 객체를 전달
   4) 3번에서 생성한 Thread객체의 start()를 호출
      => 스케쥴러에 의해서 Thread객체의 run()가 호출된다. 만약 Thread객체의 run이 오버라이딩되어 있지 않으면
         Thread객체가 갖고 있는 Runnable의 하위 객체의 run메소드가 호출된다.
         
4. Runnable을 상속해서 작업할 수 있도록 2번 예제를 변경
   - RunnableTest02.java
   - AlphaThread2
   - Digitthread2
   
5. Thread 종료
   1) 임의의 변수를 선언해서 종료하는 방법
      ---------
      flag 변수
      
      - 변수에 저장된 값에 따라서 처리할 수 있도록 구현(실행 or 종료 - boolean)
      - 변수값을 체크(오래 걸리는 작업이 있는 경우 중간에 이 변수값을 체크해서 쓰레드를 종료할 수 있다.)
      
   2) 인터럽트를 발생시키고 현재 상태를 체크하고 작업하기
   

